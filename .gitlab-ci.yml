stages:
  - test
  - build
  - upload
  - release
  - deploy

variables:
  PACKAGE_VERSION: "0.3.14"
  FILE_NAME: "cthack-${PACKAGE_VERSION}"
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/cthackrelease/${PACKAGE_VERSION}"

test:
  stage: test
  image: python:3-alpine
  script:
    - apk update
    - python -mjson.tool 'system.json' > /dev/null
    - python -mjson.tool 'template.json' > /dev/null

build:
  stage: build
  image: python:3-alpine
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_TAG'   # Allow this step when a tag is created manually or on the main branch
      when: on_success
  script:
    - apk update
    - apk add zip
    - zip ${FILE_NAME}.zip -r css lang module packs templates ui README.md system.json template.json LICENSE CHANGELOG
  artifacts:
    name: ${FILE_NAME}
    expire_in: never
    when: on_success
    paths:
      - ${FILE_NAME}.zip

upload:
  stage: upload
  image: curlimages/curl:latest
  rules:
    - if: $CI_COMMIT_TAG                  # Allow this step when a tag is created manually
  script:
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ${FILE_NAME}.zip ${PACKAGE_REGISTRY_URL}/${FILE_NAME}.zip

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG                  # Allow this step when a tag is created manually
  script:
    - |
      release-cli create --name "Release $CI_COMMIT_TAG" --description "RELEASE_NOTE.md" --tag-name $CI_COMMIT_TAG \
        --assets-link "{\"name\":\"${FILE_NAME}.zip\",\"url\":\"${PACKAGE_REGISTRY_URL}/${FILE_NAME}.zip\"}"

pages:
  stage: deploy
  image: python:3-alpine
  dependencies:
    - build
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - cp ${FILE_NAME}.zip public/
  artifacts:
    paths:
    - public

